sensor:
  # Solar
  - platform: homeassistant
    id: solaredge_current_power
    entity_id: sensor.solaredge_aktuelle_leistung
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar1
            text:
              format: "%.0f W"
              args: [ 'id(solaredge_current_power).state' ]
  - platform: homeassistant
    id: solaredge_energy_today
    entity_id: sensor.solaredge_energie_heute
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar2
            text:
              format: "%.0f Wh"
              args: [ 'id(solaredge_energy_today).state' ]
  - platform: homeassistant
    id: solaredge_grid_power
    entity_id: sensor.solaredge_netzstrom
    on_value:
      then:
        - if:
            condition:
              lambda: |-
                return id(solaredge_grid_power).state > 0;
            then:
              - lvgl.label.update:
                  id: page_solar3t
                  text: "Netzstrom"
                  text_color: red
              - lvgl.label.update:
                  id: page_solar3i
                  text: "$mdi_power_plug"
                  text_color: red
              - lvgl.label.update:
                  id: page_solar3
                  text:
                    format: "%.0f W"
                    args: [ 'id(solaredge_grid_power).state*1000' ]
                  text_color: red
            else:
              - lvgl.label.update:
                  id: page_solar3t
                  text: "Einspeisung"
                  text_color: white
              - lvgl.label.update:
                  id: page_solar3i
                  text: "$mdi_transmission_tower_import"
                  text_color: white
              - lvgl.label.update:
                  id: page_solar3
                  text:
                    format: "%.0f W"
                    args: [ '-id(solaredge_grid_power).state*1000' ]
                  text_color: white
  - platform: homeassistant
    id: solaredge_power_consumption
    entity_id: sensor.solaredge_power_consumption

  - platform: homeassistant
    id: solaredge_energie_in_diesem_jahr
    entity_id: sensor.solaredge_energie_in_diesem_jahr
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar5
            text:
              format: "%.2f MWh"
              args: [ 'id(solaredge_energie_in_diesem_jahr).state / 1000000' ]

  - platform: homeassistant
    id: solaredge_selbst_verbrauchte_energie
    entity_id: sensor.solaredge_selbst_verbrauchte_energie
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar6
            text: !lambda |-
              if (id(solaredge_verbrauchte_energie).state > 0) {
                static char perc[6];
                snprintf(perc, 6, "%.0f%%", id(solaredge_selbst_verbrauchte_energie).state * 100 / id(solaredge_verbrauchte_energie).state);
                return perc;
              } else {
                return " ";
              }

  - platform: homeassistant
    id: solaredge_verbrauchte_energie
    entity_id: sensor.solaredge_verbrauchte_energie
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar6
            text: !lambda |-
              if (id(solaredge_verbrauchte_energie).state > 0) {
                static char perc[6];
                snprintf(perc, 6, "%.0f%%", id(solaredge_selbst_verbrauchte_energie).state * 100 / id(solaredge_verbrauchte_energie).state);
                return perc;
              } else {
                return " ";
              }

text_sensor:
  - platform: homeassistant
    id: power_highest_peak_time_today
    entity_id: sensor.power_highest_peak_time_today
    on_value:
      then:
        - lvgl.label.update:
            id: page_solar4
            text: !lambda |-
              return x.substr(11, 5).c_str();