sensor:
  - platform: homeassistant
    id: weather_humidity
    name: Luftfeuchtigkeit
    entity_id: weather.forecast_home
    attribute: humidity
    on_value:
      then:
        - lvgl.label.update:
            id: label_weather_2
            text:
              format: "$mdi_thermometer_water %.0f%%"
              args: [ 'x' ]
        - lvgl.label.update:
            id: page_weather3
            text:
              format: "%.0f%%"
              args: [ 'x' ]

  - platform: homeassistant
    id: weather_cloud_coverage
    name: Bewölkungsgrad
    entity_id: weather.forecast_home
    attribute: cloud_coverage
    on_value:
      then:
        - lvgl.label.update:
            id: label_weather_3
            text:
              format: "$mdi_weather_cloudy %.0f%%"
              args: [ 'x' ]
        - lvgl.label.update:
            id: page_weather9
            text:
              format: "%.0f%%"
              args: [ 'x' ]

  - platform: homeassistant
    id: weather_uv
    entity_id: weather.forecast_home
    name: "UV Index"
    attribute: uv_index
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather5
            text:
              format: "%.1f"
              args: [ 'x' ]
        - if:
            condition:
              sensor.in_range:
                id: weather_uv
                above: 3
                below: 5
            then:
              - lvgl.label.update:
                  id: page_weather5
                  text_color: yellow
        - if:
            condition:
              sensor.in_range:
                id: weather_uv
                above: 5
            then:
              - lvgl.label.update:
                  id: page_weather5
                  text_color: red

  - platform: homeassistant
    id: weather_pressure
    entity_id: weather.forecast_home
    name: "Luftdruck"
    attribute: pressure
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather6
            text:
              format: "%.0f hPa"
              args: [ 'x' ]
    on_value_range:
      - below: 1010
        then:
          - lvgl.label.update:
              id: page_weather6i
              text: "$mdi_cloud_arrow_down_outline"
      - above: 1010
        below: 1020
        then:
          - lvgl.label.update:
              id: page_weather6i
              text: "$mdi_cloud_cog_outline"
      - above: 1020
        then:
          - lvgl.label.update:
              id: page_weather6i
              text: "$mdi_cloud_arrow_up_outline"

  - platform: homeassistant
    id: weather_dew_point
    name: Taupunkt
    entity_id: weather.forecast_home
    attribute: dew_point
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather4
            text:
              format: "%.0f °C"
              args: [ 'x' ]

  - platform: homeassistant
    id: weather_wind_speed
    name: Windgeschwindigkeit
    entity_id: weather.forecast_home
    attribute: wind_speed
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather7
            text:
              format: "%.0f km/h"
              args: [ 'x' ]
        - if:
            condition:
              sensor.in_range:
                id: weather_wind_speed
                above: 50
                below: 88
            then:
              - lvgl.label.update:
                  id: page_weather7
                  text_color: yellow
        - if:
            condition:
              sensor.in_range:
                id: weather_wind_speed
                above: 88
            then:
              - lvgl.label.update:
                  id: page_weather7
                  text_color: red

  - platform: homeassistant
    id: weather_wind_bearing
    name: Taupunkt
    entity_id: weather.forecast_home
    attribute: wind_bearing
    on_value_range:
      - above: 0
        below: 22.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "N (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_down_thin_circle_outline"
      - above: 22.5
        below: 67.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "NO (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_bottom_left_thin_circle_outline"
      - above: 67.5
        below: 112.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "O (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_left_thin_circle_outline"
      - above: 112.5
        below: 157.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "SO (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_top_left_thin_circle_outline"
      - above: 157.5
        below: 202.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "S (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_up_thin_circle_outline"
      - above: 202.5
        below: 247.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "SW (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_top_right_thin_circle_outline"
      - above: 247.5
        below: 292.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "W (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_right_thin_circle_outline"
      - above: 292.5
        below: 337.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "NW (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_bottom_right_thin_circle_outline"
      - above: 337.5
        then:
          - lvgl.label.update:
              id: page_weather8
              text:
                format: "N (%.0f°)"
                args: [ 'x' ]
          - lvgl.label.update:
              id: page_weather8i
              text: "$mdi_arrow_down_thin_circle_outline"


text_sensor:
  - platform: homeassistant
    id: weather_temperature
    name: Temperatur
    entity_id: weather.forecast_home
    attribute: temperature
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather1
            text:
              format: "%s °C"
              args: [ 'id(weather_temperature).state.c_str()' ]
        - lvgl.label.update:
            id: label_weather_1
            text:
              format: "$mdi_thermometer %s °C"
              args: [ 'x.c_str()' ]

  - platform: homeassistant
    id: weather_condition
    name: Wetter
    entity_id: weather.forecast_home
    filters:
      - map:
        - sunny -> $mdi_weather_sunny Sonnig
        - clear-day -> $mdi_weather_sunny Klar
        - clear-night -> $mdi_weather_clear_night Klare Nacht
        - cloudy -> $mdi_weather_cloudy Bewölkt
        - rainy -> $mdi_weather_rainy Regen
        - sleet -> $mdi_weather_snow_rain Schneeregen
        - snow -> $mdi_weather_snow Schnee
        - wind -> $mdi_weather_windy Windig
        - fog -> $mdi_weather_fog Nebel
        - partlycloudy -> $mdi_weather_partly_cloudy Teilweise Bewölkt
    on_value:
      then:
        - lvgl.label.update:
            id: page_weather2
            text:
              format: "%s"
              args: [ 'x.substr(x.find(" ")+1).c_str()' ]
        - lvgl.label.update:
            id: label_weather_icon
            text:
              format: "%s"
              args: [ 'x.substr(0, x.find(" ")).c_str()' ]

  - platform: homeassistant
    id: daily_forecast
    name: Temperaturvorschau
    entity_id: sensor.daily_forecast
    on_value:
      then:
        - lambda: |-
            std::vector<std::string> days;
            std::vector<float> templowf;
            std::vector<std::string> temps;
            std::vector<float> tempsf;
            std::vector<float> rain;
            std::vector<std::string> symbol;
            static std::map<std::string, std::string> daymapping = {{"Mon", "Mo"}, {"Tue", "Di"}, {"Wed", "Mi"}, {"Thu", "Do"}, {"Fri", "Fr"}, {"Sat", "Sa"}, {"Sun", "So"}};
            char *save;
            char *save2;
            //ESP_LOGD("main", x.c_str());

            char* input = (char*) malloc(sizeof(char)*x.size()+1);
            strcpy(input, x.data());
            char *token = strtok_r(input, "#", &save);

            while(token) {
              std::vector<std::string> forecast;
              std::string val(token);
              val.erase(0, val.find_first_not_of(" \n\r\t"));
              val.erase(val.find_last_not_of(" \n\r\t")+1);

              char* input2 = (char*) malloc(sizeof(char)*val.size()+1);
              strcpy(input2, val.data());
              char *token2 = strtok_r(input2, ";", &save2);
              while(token2) {
                std::string val2(token2);
                val2.erase(0, val2.find_first_not_of(" \n\r\t"));
                val2.erase(val2.find_last_not_of(" \n\r\t")+1);

                forecast.push_back(val2);
                token2 = strtok_r(NULL, ";", &save2);
              }
              free(input2);
              while(forecast.size() < 5) forecast.push_back("");
              auto daysearch = daymapping.find(forecast[0]);
              if (daysearch == daymapping.end()) {
                days.push_back(forecast[0]);
              } else {
                days.push_back(daymapping[forecast[0]]);
              }
              templowf.push_back(atof(forecast[1].c_str()));
              temps.push_back(forecast[2]);
              tempsf.push_back(atof(forecast[2].c_str()));
              rain.push_back(atof(forecast[3].c_str()));
              symbol.push_back(forecast[4]);
              token = strtok_r(NULL, "#", &save);
            }
            free (input);
            static lv_obj_t * ldays[] =  { fc0_day, fc1_day, fc2_day, fc3_day, fc4_day };
            static lv_obj_t * ltemps[] = { fc0_temp, fc1_temp, fc2_temp, fc3_temp, fc4_temp };
            static lv_obj_t * ltempslow[] = { fc0_templow, fc1_templow, fc2_templow, fc3_templow, fc4_templow };
            static lv_obj_t * lrains[] = { fc0_rain, fc1_rain, fc2_rain, fc3_rain, fc4_rain };
            static lv_obj_t * lsyms[] =  { fc0_sym, fc1_sym, fc2_sym, fc3_sym, fc4_sym };
            // correct would be starting at 0 and ending at 220
            static lv_point_t mlv_point_t_id[] = {{0, 75}, {70, 75}, {120, 75}, {170, 75}, {242, 75}};
            static lv_point_t mlv_pointlow_t_id[] = {{0, 75}, {70, 75}, {120, 75}, {170, 75}, {242, 75}};
            for (int i=0; i<5; i++) {
              if (i < tempsf.size()) {
                mlv_point_t_id[i].y    = (lv_coord_t)(75 - 2.3 * tempsf[i]);
                mlv_pointlow_t_id[i].y = (lv_coord_t)(75 - 2.3 * templowf[i]);
                lv_label_set_text(ltempslow[i], str_sprintf("%.1f°", templowf[i]).c_str());
              }
              if (i < days.size())   lv_label_set_text(ldays[i],  (days[i]).c_str());
              if (i < temps.size())  lv_label_set_text(ltemps[i], (temps[i] + "°").c_str());
              if (i < rain.size())   lv_label_set_text(lrains[i], str_sprintf("%.0fmm", rain[i]).c_str());
              if (i < symbol.size()) lv_label_set_text(lsyms[i],  (symbol[i]).c_str());
            }
            lv_line_set_points(temp_line, mlv_point_t_id, 5);
            lv_line_set_points(templow_line, mlv_pointlow_t_id, 5);

  - platform: homeassistant
    id: hourly_forecast
    name: Temperaturheute
    entity_id: sensor.hourly_forecast
    on_value:
      then:
        - lambda: |-
            std::vector<int> time;
            std::vector<float> tempsf;
            char *save;
            char *save2;
            static lv_obj_t * lhours[] = { fc0_hour, fc1_hour, fc2_hour, fc3_hour, fc4_hour };

            char* input = (char*) malloc(sizeof(char)*x.size()+1);
            strcpy(input, x.data());
            char *token = strtok_r(input, "#", &save);

            while(token) {
              std::vector<std::string> forecast;
              std::string val(token);
              val.erase(0, val.find_first_not_of(" \n\r\t"));
              val.erase(val.find_last_not_of(" \n\r\t")+1);

              char* input2 = (char*) malloc(sizeof(char)*val.size()+1);
              strcpy(input2, val.data());
              char *token2 = strtok_r(input2, ";", &save2);
              while(token2) {
                std::string val2(token2);
                val2.erase(0, val2.find_first_not_of(" \n\r\t"));
                val2.erase(val2.find_last_not_of(" \n\r\t")+1);

                forecast.push_back(val2);
                token2 = strtok_r(NULL, ";", &save2);
              }
              free(input2);
              while(forecast.size() < 24) forecast.push_back("");
              time.push_back(atoi(forecast[0].c_str()));
              tempsf.push_back(atof(forecast[1].c_str()));
              token = strtok_r(NULL, "#", &save);
            }
            free (input);
            static lv_point_t mlv_pointhour_t_id[] = {{00, 75},  {30, 75},  {40, 75},  {50, 75},  {60, 75},
                                                      {70, 75},  {80, 75},  {90, 75},  {100, 75}, {110, 75},
                                                      {120, 75}, {130, 75}, {140, 75}, {150, 75}, {160, 75},
                                                      {170, 75}, {180, 75}, {190, 75}, {200, 75}, {210, 75},
                                                      {242, 75}};
            for (int i=0; i<21; i++) {
              if (i < tempsf.size()) {
                mlv_pointhour_t_id[i].y = (lv_coord_t)(75 - 2.3 * tempsf[i]);
              }
            }
            lv_line_set_points(temphour_line, mlv_pointhour_t_id, 21);
            lv_label_set_text(lhours[0],  str_sprintf("%2d:00", time[0]).c_str());
            lv_label_set_text(lhours[1],  str_sprintf("%2d:00", time[6]).c_str());
            lv_label_set_text(lhours[2],  str_sprintf("%2d:00", time[12]).c_str());
            lv_label_set_text(lhours[3],  str_sprintf("%2d:00", time[18]).c_str());
            lv_label_set_text(lhours[4],  str_sprintf("%2d:00", time[23]).c_str());
